<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.buba.dao.StudentDao">
    <!-- 第一种方式：级联查询-start-
             pojo1里包含另一个pojo2，使用:pojo1.pojo2.属性  的方式进行映射
           -->
<!--    <resultMap id="studentAndDangan" type="Students" autoMapping="true">-->
<!--        <id column="id" property="id"></id>-->
<!--        <result column="studentCode" property="studentCode"></result>-->
<!--        <result column="studentName" property="studentName"></result>-->
<!--        <result column="age" property="age"></result>-->
<!--        <result column="sex" property="sex"></result>-->
<!--        <result column="phone" property="phone"></result>-->
<!--        <result column="shichangbu" property="dangan.shichangbu"></result>-->
<!--        <result column="jiguan" property="dangan.jiguan"></result>-->
<!--        <result column="minzu" property="dangan.minzu"></result>-->
<!--        <result column="className" property="classes.className"></result>-->
<!--    </resultMap>-->
    <!--    第一种方式：级联查询-end-   -->

    <!--    第二种方式：嵌套结果-start-
            association中的javaType：需要映射的pojo的类型
    -->
    <resultMap id="studentAndDangan" type="Students" autoMapping="true">
        <id column="sid" property="id"></id>
<!--        <result column="studentCode" property="studentCode"></result>-->
<!--        <result column="studentName" property="studentName"></result>-->
<!--        <result column="age" property="age"></result>-->
<!--        <result column="sex" property="sex"></result>-->
        <association property="dangan" javaType="Dangan" autoMapping="true">
            <id column="did" property="id"></id>
<!--            <result column="shichangbu" property="shichangbu"></result>-->
<!--            <result column="jiguan" property="jiguan"></result>-->
<!--            <result column="minzu" property="minzu"></result>-->
        </association>
        <association property="classes" javaType="Classes" autoMapping="true">
            <id column="cid" property="id"></id>
<!--            <result column="className" property="className"></result>-->
        </association>
    </resultMap>
    <!--    第二种方式：嵌套结果-end-->

<!--    查询学生列表-->
    <!--    <select id="listStudent" resultType="com.buba.pojo.Students">-->
    <select id="listStudent" resultMap="studentAndDangan">
        select
               c.id cid,
               c.*,
               s.id sid,
               s.*,
               d.id did,
               d.*
        from students s
        left join dangan d
        on d.id = s.danganId
        left join classes c
        on c.id = s.classId
        <where>
            <if test="stCode != null and stCode != ''">
                and studentCode like concat('%', #{stCode} ,'%')
            </if>
            <if test="stName != null and stName != ''">
                and studentName like concat('%', #{stName} ,'%')
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
        </where>
    </select>

<!--    根据班级id取得学生信息列表-->
    <select id="listStudentByClassId" resultMap="studentAndDangan">
        select
            s.*,
            d.shichangbu,
            d.jiguan
        from students s
                 left join dangan d
                           on s.danganId = d.id
        where s.classId = #{cId};
    </select>

    <insert id="insertStudent" parameterType="Students">
        insert into students(studentCode,
                             studentName,
                             age,
                             sex,
                             phone,
                             classId,
                             danganId)
        values (#{studentCode},
                #{studentName},
                #{age},
                #{sex},
                #{phone},
                #{classId},
                #{danganId}
                )
    </insert>

    <select id="getStudentById" resultType="Students">
        select * from students where id = #{sId}
    </select>

    <update id="updateStudentById" parameterType="Students">
        update
            students set
                studentCode = #{studentCode},
                studentName = #{studentName},
                age = #{age},
                sex = #{sex},
                phone = #{phone},
                classId = #{classId}
        where id = #{id}
    </update>

    <delete id="removeStudentById">
        delete from students where id = #{sId}
    </delete>
</mapper>